{ ==================================================================== }
{ ------------------- Main Configuration File ------------------------ }
{ -------------------- for Patch Experiments ------------------------- }
{ ==================================================================== }
{ - classic electrophysiology protocols and various research projects  }
{ ---------- see the individual files for comments ------------------- }
{ -------------------------------------------------------------------- }
{ ------- implemented by Yann Zerlaut : zerlaut@unic.cnrs-gif.fr ----- }
{ -----------------------------------------------  2013-[...] -------- }


var global_dialog : Tdialog ;
    location_int, amplifier_int, experiment_int : integer ;// ==> amplifier, location and experiment flag
    global : TDBrecord ; // ==> Stores the global variables !! 
    Exp_Params : TDBrecord ; // ==> Stores the parameters specific to each experience !!
    {variables to fetch the date and time }
    Year,Month,Day,Hour,Minute,Second,MilliSecond:smallint; 
    pathOfTheDay, root_path : string ;
    main_protocol : string ; 
    already_initiated : boolean ;

{Tmacro object, see doc\, specifically loads only one file}
var 
t_classic_electrophy, field_effects, t_transfer_functions : Tmacro ;
t_macro : Tmacro ;

procedure classic_electrophy;
begin
global.experiment_type:='classic_electrophy';
//t_classic_electrophy.create(root_path+'classic_electrophy.PG2');
//t_classic_electrophy.ExecuteCommand('Launch_from_Tmacro');
t_macro.create(root_path+'classic_electrophy.PG2');
t_macro.ExecuteCommand('Launch_from_Tmacro');
end;

procedure Efield_effects;
begin
global.experiment_type:='field_effects';
//field_effects.create(root_path+'field_effects.PG2');
//field_effects.ExecuteCommand('Launch_from_Tmacro');
t_macro.create('field_effects.PG2');
//t_macro.ExecuteCommand('Launch_from_Tmacro');
end;
 
              
procedure transfer_functions;
begin
global.experiment_type:='transfer_functions';
t_transfer_functions.create(root_path+'transfer_functions.PG2');
t_transfer_functions.ExecuteCommand('Launch_from_Tmacro');
end;


procedure global_event(n:integer);
begin
    global_dialog.updatevar;
     case n of
       100 : begin
             if location_int=2 then   // MSwin + Bal's Setup
                 begin
                    global.location  := 'Patch Setup'  ;
                    global.data_Path := 'D:\yann\DATA\' ;
                    global.loadnrnPath := 'D:/yann/myelphy/nrn_files/' ;
                    root_path := 'D:\yann\myelphy\' ;
                    global.root_path:= root_path ;
                    global.sep:='\_';
                 end;
             if location_int=1 then   // MSWin + Notebook
                 begin
                    global.location := 'Notebook' ;
                    global.data_Path:='D:\home\yann\files\DATA\';
                    global.loadnrnPath:='D:/home/yann/work/elphy_code/nrn_files/';
                    root_path:= 'D:\home\yann\work\elphy_code\';
                    global.root_path:=root_path ;
                    global.sep:='/_'; {N.B. linux computers have different separators, see above paths}
                 end;
                 PathOfTheDay := global.data_Path;
                 PathOfTheDay := PathOfTheDay+Istr(Year)+'_'+Istr(Month)+'_'+Istr(Day)+'/' ;
                 global.PathOfTheDay := PathOfTheDay ;
             case amplifier_int of
             1 : global.amplifier := 'nrn_simulation' ;
             2 : global.amplifier := 'multiclamp' ;
             end;
             case experiment_int of
              1 : classic_electrophy;
              2 : field_effects ;
              3 : transfer_functions ;
             end;
       end;
     end;   
    global_dialog.update;
end;

procedure init_global_dialog;
begin
    location_int :=1;
    amplifier_int := 1;
    experiment_int := 1;
    global.create;
    // we initialize some recording quantities
    
    global.f_acq:=10; // in kHz
    global.gain1:=1; // gain of the first channel
    global.int_gain1:=1; // integer coding for this gain
    global.gain2:=1; // gain of the second channel
    global.int_gain2:=1; //
    global.clamp_int := 1; // integer that code for 1:IC, 2: VC
    global.cont_choice := True; // if True -> continus mode, else episode
    global.stim := False;  // if True acquisition.Fstimulate := True
    global.max_EP_num := 0 ;
    global.f_acq := 10 ;  // in kHz
    global.episode_duration := 2000 ;
    global.acquisitionISI := 1;  
    
    Exp_Params.create;
    already_initiated :=True;
    InsertPage(1,'fake');DeleteAllPages('fake');InsertPage(1,'default');DeleteAllPages('default');
    Color := cl_gray ;

  {----- Path for file saving ------- }
  DecodeDateTime(Now,Year,Month,Day,Hour,Minute,Second,MilliSecond); {function to fetch date and time}
  
  with global_dialog do
  begin
  create;
  OnEvent := global_event ;
  getStringList(' Device  : ',' | Notebook | Bal Setup ','0|1|2',location_int,101);  { Onevent flag ->199}
  setText(' ================================= ');
  getStringList(' Amplifier : ',' | RTneuron-Simulation | MultiClamp | NPI | AxoClamp ','0|1|2|3|4',amplifier_int,102);  { Onevent flag ->199}
  setText(' ================================= ');
  setText(' today is :'+Istr(Day)+'/'+Istr(Month)+'/'+Istr(Year)+' ');
  setText(' (important for data saving) ');
  setText(' ================================= ');
  getStringList(' Experiment Type : ',' | Classic Electrophy| Field Effect  | Transfer Function ','0|1|2|3',experiment_int,1003);  { Onevent flag ->199}
  setText(' ================================= ');
  getCommandA(' ----------------LAUNCH----------------- ', 0,100);
  caption := 'Global' ;
  end;
end;



{ =============================================================================
   We need to set up some global variables that will be used, defined and 
modified in time across the different protocols in the course of the experiment

e.g. the gain of the amplifier -> global variable
e.g. the membrane resistance -> experimental value

 in addition, we will store the data in a '/DATA' folder where we will create
 a folder for each day and where the file name will be determined by the protocol
 name and the time's start of the protocol
===============================================================================}



program Experiments
init_global_dialog; 
global_dialog.show;                                                     



{ =================== ANALYSIS ====================== }

{
procedure default_channels;
var id,h0,ph,cc: integer ;
begin
   DestroyWindows(1,1,10);
   cc :=ChannelCount;
   if ChannelCount<1 then begin MessageBox('no data loaded !'); cc:=1; end; 
   ph := Round(PageHeight/cc);
   h0:=0 ; 
   for id:=1 to ChannelCount do
   begin 
     DefineWindow(1,0,h0,PageWidth,h0+ph);
     h0:=h0+ph;
     addObject(1,id,v[id]);
   end;
end;
}

program analysis
insertpage(1,'default');
DeleteAllPages('default');
