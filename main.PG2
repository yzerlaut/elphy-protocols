{ ==================================================================== }
{ ------------------- Main Configuration File ------------------------ }
{ -------------------- for Patch Experiments ------------------------- }
{ ==================================================================== }
{ - classic electrophysiology protocols and various research projects  }
{ ---------- see the individual files for comments ------------------- }
{ -------------------------------------------------------------------- }
{ ------- implemented by Yann Zerlaut : zerlaut@unic.cnrs-gif.fr ----- }
{ -----------------------------------------------  2013-[...] -------- }


const 
   location= 'Patch Setup'; {'Notebook' or 'Patch Setup'}
   amplifier= 'multiclamp'; {'nrn_simulation' or 'multiclamp' or 'NPI'}


var 
    global : TDBrecord ;  {     = => Stores the global variables !! }
    Exp_Params : TDBrecord ; { = => Stores the parameters specific to each experience !!}
    {variables to fetch the date and time }
    root_path : string ; 

{Tmacro object, see doc\, specifically loads only one file}
var 
t_macro : Tmacro ;

procedure classic_electrophy;
begin
global.experiment_type:='classic_electrophy';
t_macro.create(root_path+'classic_electrophy.PG2');
t_macro.ExecuteCommand('Launch_from_Tmacro');
end;

procedure AdExp_charact;
begin
global.experiment_type:='AdExp_charact';
t_macro.create(root_path+'AdExp_charact.PG2');
t_macro.ExecuteCommand('Launch_from_Tmacro');
end;
 
procedure fluctuation_driven_regime;
begin
global.experiment_type:='fluctuation_driven_regime';
t_macro.create(root_path+'fluctuation_driven_regime.PG2');
t_macro.ExecuteCommand('Launch_from_Tmacro');
end;

procedure transfer_functions;
begin
global.experiment_type:='transfer_functions';
t_macro.create(root_path+'transfer_functions.PG2');
t_macro.ExecuteCommand('Launch_from_Tmacro');
end;

procedure Efield_effects;
begin
global.experiment_type:='field_effects';
t_macro.create(root_path+'field_effects.PG2');
t_macro.ExecuteCommand('Launch_from_Tmacro');
end;

procedure setup_init;
begin
   if location='Notebook' then
   begin
      global.location := 'Notebook' ;
      global.data_Path:='D:\home\yann\files\DATA\';
      global.loadnrnPath:='D:/home/yann/work/elphy_code/nrn_files/';
      root_path:= 'D:\home\yann\work\elphy_code\';
      global.root_path:=root_path ;
      global.sep:='/_'; {N.B. linux computers have different separators, see above paths}
   end
   else if location='Patch Setup' then
   begin
      global.location  := 'Patch Setup'  ;
      global.data_Path := 'D:\yann\DATA\' ;
      global.loadnrnPath := 'D:/yann/elphy_code/nrn_files/' ;
      root_path := 'D:\yann\elphy_code\' ;
      global.root_path:= root_path ;
      global.sep:='\_';
   end;
   if not DirectoryExists(root_path) then MessageBox('Problem with the Setup Initialisation, check the path !');
   global.amplifier := amplifier;
end;

procedure init_global;
begin
    global.create;
    // we initialize some recording quantities
    global.f_acq:=10; // in kHz
    global.gain1:=1; // gain of the first channel
    global.int_gain1:=1; // integer coding for this gain
    global.gain2:=1; // gain of the second channel
    global.int_gain2:=1; //
    global.clamp_int := 1; // integer that code for 1:IC, 2: VC
    global.cont_choice := True; // if True -> continus mode, else episode
    global.stim := False;  // if True acquisition.Fstimulate := True
    global.max_EP_num := 0 ;
    global.episode_duration := 20 ;
    global.acquisitionISI := 1;  
    
    Exp_Params.create;
    InsertPage(1,'fake');DeleteAllPages('fake');InsertPage(1,'default');DeleteAllPages('default');
    Color := cl_gray ;
end;



{ =============================================================================
   We need to set up some global variables that will be used, defined and 
modified in time across the different protocols in the course of the experiment

e.g. the gain of the amplifier -> global variable
e.g. the membrane resistance -> experimental value

 in addition, we will store the data in a '/DATA' folder where we will create
 a folder for each day and where the file name will be determined by the protocol
 name and the time's start of the protocol
===============================================================================}


program initialisation
init_global;
setup_init;

program classic_electrophy
init_global;
setup_init;
classic_electrophy;

program AdExp_charact
AdExp_charact;

program fluctuation_driven_regime
fluctuation_driven_regime;

program transfer_functions
transfer_functions;

program Efield_effects
Efield_effects;



{ =================== ANALYSIS ====================== }

{
procedure default_channels;
var id,h0,ph,cc: integer ;
begin
   DestroyWindows(1,1,10);
   cc :=ChannelCount;
   if ChannelCount<1 then begin MessageBox('no data loaded !'); cc:=1; end; 
   ph := Round(PageHeight/cc);
   h0:=0 ; 
   for id:=1 to ChannelCount do
   begin 
     DefineWindow(1,0,h0,PageWidth,h0+ph);
     h0:=h0+ph;
     addObject(1,id,v[id]);
   end;
end;
}

program analysis
insertpage(1,'default');
DeleteAllPages('default');
